import SocialMediaReportCard from "@/components/Cards/SocialMediaReportCards";
import { UserContext } from "@/context/UserContext";
import { GetWebpagesByCreatedBy } from "@/helpers/webpage";
import Head from "next/head";
import { useContext, useEffect, useState } from "react";
import { useTranslation } from "react-i18next";

const SocialNetwork = () => {
    const { t } = useTranslation();
    const { loggedUser } = useContext(UserContext);
    const [webpagesData, setWebpagesData] = useState([]);
    const [pageSelected, setPageSelected] = useState();
    const [pageToShow, setPageToShow] = useState();

    useEffect(() => {
        if (loggedUser) {
            GetWebpagesByCreatedBy(loggedUser?.uid).then(webpages => {
                setWebpagesData(webpages);
                setPageSelected(webpages[0]?.pageUrl)
            })
        }
    }, [loggedUser])

    useEffect(() => {
        if (pageSelected !== undefined) {
            setPageToShow(webpagesData.find(page => page.pageUrl === pageSelected))
        }
    }, [pageSelected])

    return (
        <div className="">
            <Head>
                <title>{t("navbar.reports")} | ArmourWeb</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/images/awLogo-nobg.png" />
            </Head>
            <select className="ml-16 my-10 shadow border rounded w-[20rem] py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline mb-4" value={pageSelected} onChange={(e) => { setPageSelected(e.target.value) }}>
                {webpagesData?.map((webpage, i) => {
                    return (<option key={i} value={webpage?.pageUrl}>{webpage?.name}</option>)
                })}
            </select>
            <p className="text-center text-[2rem] font-bold my-10">{pageToShow?.name}</p>
            <div className="grid grid-cols-2 mx-[24rem] justify-items-center gap-y-4">
                <SocialMediaReportCard cardType="Facebook" webpage={pageToShow} />
                <SocialMediaReportCard cardType="Instagram" webpage={pageToShow} />
                <SocialMediaReportCard cardType="X" webpage={pageToShow} />
                <SocialMediaReportCard cardType="LinkedIn" webpage={pageToShow} />
            </div>
        </div >
    )
}

export default SocialNetwork;